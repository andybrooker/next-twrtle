generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@unique([provider, userId])
}

model Author {
  id         String        @id
  username   String
  categories Category[]
  users      UserAuthors[]
}

model Category {
  category String
  id       Int      @id @default(autoincrement())
  authors  Author[]
}

model Bookmark {
  id       Int   @id @default(autoincrement())
  tweet_id Int
  tags     Tag[]
}

model Tag {
  id        Int        @id @default(autoincrement())
  name      String
  bookmarks Bookmark[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String        @id @default(cuid())
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  following     UserAuthors[]
}

model UserAuthors {
  userId     String
  authorId   String
  followedAt DateTime @default(now())
  author     Author   @relation(fields: [authorId], references: [id])
  user       User     @relation(fields: [userId], references: [id])

  @@id([userId, authorId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
